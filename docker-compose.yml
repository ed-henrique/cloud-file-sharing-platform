version: '3'
services:
  postgres:
    image: postgres:15.3-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Password for PostgreSQL
    networks:
      - cloud-network
    # descomente se quiser acessar o banco de dados externamente
    #ports:
    #  - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 20s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    environment:
      # configuration for backend
      API_PORT: ${API_PORT}
      JWT_SECRET: ${JWT_SECRET}
      # configuration for postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Password for PostgreSQL

      # configuration for gcs
      GCS_BUCKET_NAME: ${GCS_BUCKET_NAME}
      GCS_PROJECT_ID: ${GCS_PROJECT_ID}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 3000:3000
    networks:
      - cloud-network
    volumes:
      - backend-data:/app/

  nginx:
    build:
      context: ./frontend
    environment:
      API_PROTOCOL: https
      API_IP: localhost
      API_PORT: 3000
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    networks:
      - cloud-network

networks:
  cloud-network:


volumes:
  backend-data:
  postgres-data:
